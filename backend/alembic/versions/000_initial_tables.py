"""create_all_tables

Revision ID: 000
Revises: 
Create Date: 2025-07-11 18:08:05.290747

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '000'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('restaurants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('tz', sa.String(), nullable=False),
    sa.Column('require_pass', sa.Boolean(), nullable=True),
    sa.Column('api_key', sa.String(length=12), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('daily_passes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('word_hash', sa.String(), nullable=False),
    sa.Column('valid_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('restaurant_id', 'valid_date', name='uix_rest_date')
    )
    op.create_table('pos_systems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('restaurant_hours',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('day', sa.SmallInteger(), nullable=False),
    sa.Column('opens_at', sa.Time(), nullable=False),
    sa.Column('closes_at', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('restaurant_id', 'day', name='uix_rest_day')
    )
    op.create_table('tables',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('qr_token', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('open', 'dirty', 'disabled', name='table_status'), nullable=True),
    sa.Column('external_data', sa.JSON(), nullable=True),
    sa.Column('external_table_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id'),
    sa.UniqueConstraint('qr_token')
    )
    op.create_table('addon_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('external_group_id', sa.String(), nullable=True),
    sa.Column('external_data', sa.JSON(), nullable=True),
    sa.Column('pos_system_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pos_system_id'], ['pos_systems.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_group_id', 'pos_system_id', name='uix_addon_group_pos')
    )
    op.create_table('menu_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category_brief', sa.String(), nullable=True),
    sa.Column('group_category', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('image_path', sa.String(), nullable=True),
    sa.Column('cloudflare_image_id', sa.String(), nullable=True),
    sa.Column('cloudflare_video_id', sa.String(), nullable=True),
    sa.Column('veg_flag', sa.Boolean(), nullable=True),
    sa.Column('is_bestseller', sa.Boolean(), nullable=True),
    sa.Column('is_recommended', sa.Boolean(), nullable=True),
    sa.Column('kind', sa.Enum('food', 'ad', name='menuitem_kind'), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('promote', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('external_data', sa.JSON(), nullable=True),
    sa.Column('itemallowvariation', sa.Boolean(), nullable=True),
    sa.Column('itemallowaddon', sa.Boolean(), nullable=True),
    sa.Column('pos_system_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pos_system_id'], ['pos_systems.id'], ),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.Column('state', sa.Enum('active', 'closed', 'expired', name='session_state'), nullable=True),
    sa.Column('daily_pass_required', sa.Boolean(), nullable=True),
    sa.Column('pass_validated', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index('ix_one_open_per_table', 'sessions', ['restaurant_id', 'table_id'], unique=True, postgresql_where=sa.text("state = 'active'"))
    op.create_index(op.f('ix_sessions_last_activity_at'), 'sessions', ['last_activity_at'], unique=False)
    op.create_table('variations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('group_name', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('external_variation_id', sa.String(), nullable=True),
    sa.Column('external_data', sa.JSON(), nullable=True),
    sa.Column('pos_system_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pos_system_id'], ['pos_systems.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_variation_id', 'pos_system_id', name='uix_variation_pos')
    )
    op.create_table('addon_group_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('addon_group_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('display_name', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('external_addon_id', sa.String(), nullable=True),
    sa.Column('external_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['addon_group_id'], ['addon_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_addon_id', 'addon_group_id', name='uix_addon_item_pos')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('restaurant_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=True),
    sa.Column('kind', sa.String(), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurants.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index(op.f('ix_events_created_at'), 'events', ['created_at'], unique=False)
    op.create_table('item_addons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('menu_item_id', sa.Integer(), nullable=False),
    sa.Column('addon_group_id', sa.Integer(), nullable=False),
    sa.Column('min_selection', sa.Integer(), nullable=True),
    sa.Column('max_selection', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['addon_group_id'], ['addon_groups.id'], ),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('menu_item_id', 'addon_group_id', name='uix_item_addon')
    )
    op.create_table('item_variations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('menu_item_id', sa.Integer(), nullable=False),
    sa.Column('variation_id', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('external_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], ),
    sa.ForeignKeyConstraint(['variation_id'], ['variations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('menu_item_id', 'variation_id', name='uix_item_variation')
    )
    op.create_table('members',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(), nullable=False),
    sa.Column('nickname', sa.String(), nullable=False),
    sa.Column('is_host', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('item_variation_addons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('item_variation_id', sa.Integer(), nullable=False),
    sa.Column('addon_group_id', sa.Integer(), nullable=False),
    sa.Column('min_selection', sa.Integer(), nullable=True),
    sa.Column('max_selection', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['addon_group_id'], ['addon_groups.id'], ),
    sa.ForeignKeyConstraint(['item_variation_id'], ['item_variations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('item_variation_id', 'addon_group_id', name='uix_item_variation_addon')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('initiated_by_member_id', sa.Integer(), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('cart_hash', sa.String(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('status', sa.Enum('processing', 'confirmed', 'food_ready', 'failed', 'cancelled', name='order_status'), nullable=False),
    sa.Column('pos_system_id', sa.Integer(), nullable=True),
    sa.Column('pos_order_id', sa.String(), nullable=True),
    sa.Column('pos_response', sa.JSON(), nullable=True),
    sa.Column('pos_ticket', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('failed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['initiated_by_member_id'], ['members.id'], ),
    sa.ForeignKeyConstraint(['pos_system_id'], ['pos_systems.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('waiter_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('request_type', sa.Enum('call_waiter', 'ask_for_bill', name='waiter_request_type'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'resolved', name='waiter_request_status'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_by', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['members.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('public_id')
    )
    op.create_index('ix_waiter_requests_created_at', 'waiter_requests', ['created_at'], unique=False)
    op.create_index('ix_waiter_requests_status', 'waiter_requests', ['status'], unique=False)
    op.create_table('cart_items',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('public_id', sa.String(length=36), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('menu_item_id', sa.Integer(), nullable=False),
    sa.Column('selected_item_variation_id', sa.Integer(), nullable=True),
    sa.Column('qty', sa.Integer(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('state', sa.Enum('pending', 'locked', 'ordered', name='cart_item_state'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('order_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['members.id'], ),
    sa.ForeignKeyConstraint(['menu_item_id'], ['menu_items.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['selected_item_variation_id'], ['item_variations.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id', 'version', name='uix_item_version'),
    sa.UniqueConstraint('public_id')
    )
    op.create_table('cart_item_addons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cart_item_id', sa.Integer(), nullable=True),
    sa.Column('addon_item_id', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['addon_item_id'], ['addon_group_items.id'], ),
    sa.ForeignKeyConstraint(['cart_item_id'], ['cart_items.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cart_item_variation_addons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cart_item_id', sa.Integer(), nullable=False),
    sa.Column('item_variation_id', sa.Integer(), nullable=False),
    sa.Column('addon_item_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['addon_item_id'], ['addon_group_items.id'], ),
    sa.ForeignKeyConstraint(['cart_item_id'], ['cart_items.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_variation_id'], ['item_variations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cart_item_id', 'item_variation_id', 'addon_item_id', name='uix_cart_item_var_addon')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cart_item_variation_addons')
    op.drop_table('cart_item_addons')
    op.drop_table('cart_items')
    op.drop_index('ix_waiter_requests_status', table_name='waiter_requests')
    op.drop_index('ix_waiter_requests_created_at', table_name='waiter_requests')
    op.drop_table('waiter_requests')
    op.drop_table('orders')
    op.drop_table('item_variation_addons')
    op.drop_table('members')
    op.drop_table('item_variations')
    op.drop_table('item_addons')
    op.drop_index(op.f('ix_events_created_at'), table_name='events')
    op.drop_table('events')
    op.drop_table('addon_group_items')
    op.drop_table('variations')
    op.drop_index(op.f('ix_sessions_last_activity_at'), table_name='sessions')
    op.drop_index('ix_one_open_per_table', table_name='sessions', postgresql_where=sa.text("state = 'active'"))
    op.drop_table('sessions')
    op.drop_table('menu_items')
    op.drop_table('addon_groups')
    op.drop_table('tables')
    op.drop_table('restaurant_hours')
    op.drop_table('pos_systems')
    op.drop_table('daily_passes')
    op.drop_table('restaurants')
    # ### end Alembic commands ###
